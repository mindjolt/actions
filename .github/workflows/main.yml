name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
jobs:
  Build:
    runs-on: [ self-hosted, docker ]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin
    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_REF:11})
    - name: Build Confluence Docker Image
      run: |
        cd confluence
        docker build . --file Dockerfile --tag sgn0/confluence-action:${{steps.vars.outputs.tag}} 
        docker push sgn0/confluence-action:${{steps.vars.outputs.tag}}
    - name: Build Nuget Publish Image
      run: |
        cd nuget-publish
        docker build . --file Dockerfile --tag sgn0/nuget-publish-action:${{steps.vars.outputs.tag}} 
        docker push sgn0/nuget-publish-action:${{steps.vars.outputs.tag}}
    - name: Build Config Service Image
      run: |
        cd config
        docker build . --file Dockerfile --tag sgn0/config-service-action:${{steps.vars.outputs.tag}} 
        docker push sgn0/config-service-action:${{steps.vars.outputs.tag}}
    - name: Build SBT Unity Docker Image
      run: |
        cd sbt-unity/csharp-build-image
        docker build . --build-arg tag=${{steps.vars.outputs.tag}} --file Dockerfile --tag sgn0/csharp-build-env:${{steps.vars.outputs.tag}}
        docker push sgn0/csharp-build-env:${{steps.vars.outputs.tag}}
        cd ../sbt-image
        docker build . --build-arg tag=${{steps.vars.outputs.tag}} --file Dockerfile --tag sgn0/sbt-unity-action:${{steps.vars.outputs.tag}}
        docker push sgn0/sbt-unity-action:${{steps.vars.outputs.tag}}
